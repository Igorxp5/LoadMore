{"name":"Load More","tagline":"Um plugin para simplificar seu conteúdo","body":"# Load More 2.0\r\n\r\nO **Load More** é um plugin que permite o desenvolvimento de um sistema em que o número de dados há ser carregados é muito grande, sendo necessário o uso de um botão para **\"carregar mais\"**. \r\n\r\nCom ele é possível criar estruturas HTML e usar variaveis para serem substituídas por algo que esteja dentro dados que foram carregados.\r\n\r\n*O plugin não necessita do Jquery.*\r\n\r\n## Como Usar\r\n\r\nPara usá-lo obrigatoriamente é necessário:\r\n### HTML\r\n\r\nÉ necessário uma estratura HTML qualquer, exemplo:\r\n```html\r\n<!--Base Element-->\r\n<div id=\"noticias\">\r\n\t\t<div id=\"baseElement\">\r\n\t\t\t<h1>{{@title}}</h1>\r\n\t\t\t<p>{{@description}}</p>\r\n\t\t\t<article>{{@news}}</article>\r\n\t\t\t<span>{{@date}}</span>\r\n\t\t</div>\r\n</div>\r\n```\r\n### JS\r\n```js\r\nvar news = document.querySelector('#noticias');\r\n\r\nvar loadMore = news.loadMore({\r\n            config: {\r\n                object: 'json/data.json' //local onde estão os dados\r\n            },\r\n\t\t\tbaseElement: '#baseElement' //elemento base\r\n\t\t});\r\n```\r\n\r\n### CSS\r\n\r\n```css\r\n#baseElement {\r\n\tdisplay: none;\r\n}\r\n```\r\n\r\n###JSON\r\n```json\r\n//Exemplo\r\n[\r\n    {\r\n\t\t\"title\"\t\t\t: \"Noticia 1\",\r\n\t\t\"description\"\t: \"Descrição da notícia 1\",\r\n\t\t\"date\"\t\t\t: \"19 de Janeiro de 2015\",\r\n\t\t\"news\" \t\t\t: \"Lorem ipsum dolor.\",\r\n\t\t\"author\"\t\t: \"Igor Fernandes\"\r\n\t},\r\n\r\n\t{\r\n\t\t\"title\"\t\t\t: \"Noticia 2\",\r\n\t\t\"description\"\t: \"Descrição da notícia 2\",\r\n\t\t\"date\"\t\t\t: \"19 de Janeiro de 2015\",\r\n\t\t\"news\" \t\t\t: \"Lorem ipsum dolor.\",\r\n\t\t\"author\"\t\t: \"Igor Fernandes\"\r\n\t}\r\n\r\n]\r\n```\r\n\r\nO **Base Element** é a estrutura básica para substituir os valores pelos seus correspondentes, ou seja, no exemplo acima *A 1ª notícia*, o valor de ``{{@title}}`` será substitudo por **Notícia 1** . Assim também com os demais elementos.\r\n\r\nAs variáveis ``{{@%s%}}`` pode ser usados no meio do **texto HTML** ou em **atributos de TAG**.\r\n\r\n## Propriedades\r\nAs propriedades com * são obrigatórios.\r\n\r\n\r\n##config\r\n\r\n###object\r\n```\r\nconfig: {\r\n    object: ''\r\n}\r\n```\r\n\r\n**URL** onde está o **JSON**, pode ser o caminho direto de um arquivo local ou URL externa. Portanto que retorne um JSON...\r\n\r\n**Default:** ``object: ''``, é obrigatório\r\n\r\n###method\r\n```\r\nconfig: {\r\n    method: 'GET'\r\n}\r\n```\r\n\r\nQual o método vai ser usado para obter o JSON, métodos **GET** ou **POST**.\r\n\r\n**Default:** ``method: 'GET'``\r\n\r\n###requestData\r\n```\r\nconfig: {\r\n    requestData: {}\r\n}\r\n```\r\n\r\nCaso seja necessário o envio de dados (validção ou qualquer outra coisa), colocar em um objeto.\r\n\r\n**Default:** ``requestData: '{}'``\r\n\r\n\r\n##itemsInit\r\nO Load More vai criar automaticamente um elemento de ínicio, você pode alterar este valor.\r\n\r\n**Default:** ``itemsInit: 1``\r\n\r\n\r\n##itemsPerLoad\r\nDepois do primeiro será necessário o chamento da função ``loadMore`` para continuar adicionando elementos. Ao alterar este valor toda vez que a função ``loadMore`` for chamada ele vai adicionar o número de itens que estiver neste campo.\r\n\r\n**Default:** ``itemsPerLoad: 1``\r\n\r\n\r\n##buttonToLoadMore\r\nEsta propriedade pode ser uma ``string`` ou ``element DOM``, o plugin adicionará um evento de **click** no elemento, para executar a função ``loadMore``.\r\n\r\n**Default:** ``elementForLoad: ''``\r\n\r\n\r\n##baseElement*\r\nEsta propriedade pode ser uma ``string`` ou ``element DOM``, o plugin usará o elemento como estrutura para adicionar os valores do **data **. Para chamar a variável do **data** no HTML use a expressão: ``{{@%s%}}``, onde o **%s%** é o nome do campo para qual desejas substituir.\r\n\r\n**Default:** ``baseElement: ''``\r\n\r\n\r\n##minDelay\r\nValor númerico em ``ms``, definindo o tempo mínimo entre o chamar da função ``loadMore`` e o mostrar os itens novos.\r\n\r\n**Default:** ``minDelay: 1000``\r\n\r\n##effectOnLoadItems\r\nAdicionar efeitos quando for mostrar um novo item. Efeitos disponíveis: **fadeIn**, **zoomIn**. Caso sem efeito: **false**.\r\n\r\n**Default:** ``effectOnLoadItems: false``\r\n\r\n\r\n##onLoadData\r\nPropriedade do tipo ``function``, esta função será chamada quando o **object** for carregado. Ela retorna o objeto obitdo.\r\n\r\n**Default:** \r\n```js\r\nfunction(object){ \r\n\tvoid(0);\r\n}\r\n```\r\n\r\n\r\n##beforeLoadMore\r\nPropriedade do tipo ``function``, esta função será chamada antes de mostrar os novos itens na tela, Ela retorna **loadMoreTimes**, número de vezes chamados a função **loadMore** -1. \r\n\r\n**Default:** \r\n```js\r\nfunction(loadMoreTimes){ \r\n\tvoid(0);\r\n}\r\n```\r\n\r\n\r\n##afterLoadMore\r\nPropriedade do tipo ``function``, esta função será chamada antes de mostrar os novos itens na tela. Ela retorna os novos elementos adicionados em um *array*, e **loadMoreTimes**, número de vezes chamados a função **loadMore**.\r\n\r\n**Default:** \r\n```js\r\nfunction(items, loadMoreTimes){ \r\n\tvoid(0);\r\n}\r\n```\r\n\r\n\r\n##lastLoadMore\r\nPropriedade do tipo ``function``, esta função será chamada depois de executar o último **loadMore**. Ela retorna os novos elementos adicionados em um *array*.\r\n\r\n**Default:** \r\n```js\r\nfunction(items){ \r\n\tvoid(0);\r\n}\r\n```\r\n\r\n##clickButtonLoadMore\r\nPropriedade do tipo ``function``, esta função será chamada antes do **loadMore** quando clicado no botão setado em ``buttonToLoadMore``.\r\n\r\n**Default:** \r\n```js\r\nfunction(){ \r\n\tvoid(0);\r\n}\r\n```\r\n\r\n##alwaysEndLoadMore\r\nPropriedade do tipo ``function``, esta função será chamada sempre no final de todos os **loadMore**, ou tentar executar a função **loadMore**.\r\n\r\n**Default:** \r\n```js\r\nfunction(){ \r\n\tvoid(0);\r\n}\r\n```\r\n\r\n#A Classe\r\nO loadMore retorna um objeto, permitindo a mudança de algumas propriedades ou uso de funçoes mais dinamicamente.\r\n\r\nObjeto exemplo:\r\n```js\r\n    loadMore: {\r\n        afterLoadMore: function(items, loadMoreTimes){},\r\n        alwaysEndLoadMore: function(){},\r\n        beforeLoadMore: function(items){},\r\n        clickButtonLoadMore: function(){},\r\n        destroy: function(){}, //remove todos os itens, zerando o elemento principal\r\n        effectOnLoadItems: false,\r\n        itemsPerLoad: 1,\r\n        lastLoadMore: function(specificKeys, itemsToLoad){}, //executar função loadMore, sem a necessidade de esperar um click do botão setado em buttonToLoadMore\r\n        loadMoreTimes: 1, //número de vezes em que foi chamado o loadMore\r\n        minDelay: 0,\r\n        onLoadData: function(object){}\r\n    }\r\n```\r\n\r\nAuthor\r\n----\r\nIgor Fernandes\r\n\r\n\r\nLicense\r\n----\r\nLCS\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}